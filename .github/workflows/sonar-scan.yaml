#################################################################################
# Catena-X - Product Passport Consumer Application
#
# Copyright (c) 2022, 2023 BASF SE, BMW AG, Henkel AG & Co. KGaA
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the
# License for the specific language govern in permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
#################################################################################

name: "Sonar Cloud Analyze"
on:
  push:
    branches:
      - 'main'

    pull_request:
      types: [ opened, reopened, synchronize ]

env:
  JAVA_VERSION: 17

jobs:
  check-secrets-sonar-cloud:
    runs-on: ubuntu-latest
    outputs:
      secrets-available: ${{ steps.secrets-exists.outputs.available }}
    steps:
      - name: Check for Secrets availability
        id: secrets-exists
        shell: bash
        ## Check if the secrets are available in the environment
        ## Check if the secrets are available in the environment
        run: |
          if [ "${{ secrets.GITHUB_TOKEN }}" != '' ] && [ "${{ secrets.SONAR_TOKEN }}" != '' ]; then 
            echo "available=true" >> $GITHUB_OUTPUT;
            echo "Secrets are available at this environment!"
          else
            echo "available=false" >> $GITHUB_OUTPUT;
            echo "No secrets are available at this environment!"
          fi
  sonarCloud:
    needs: [ check-secrets-sonar-cloud ]
    if: needs.check-secrets-sonar-cloud.outputs.secrets-available == 'true' ## Require that the secrets are available
    name: sonarCloud
    runs-on: ubuntu-latest

    # strategy:
    #   matrix:
    #     node-version: [ 16.x ]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - uses: actions/setup-java@v3
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          distribution: 'adopt'
      
      - name: Build and analyze Java Code
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd dpp-backend/digitalproductpass
          mvn -B install org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
      
      # cannot scan frontend component in one sonar cloud project where backend is also running, because frontend implemented in different technology
      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ matrix.node-version }}

      # - name: Run npm install
      #   run: npm install --legacy-peer-deps
      
      # - name: Analyze Frontend Code
      #   uses: sonarsource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}










        
