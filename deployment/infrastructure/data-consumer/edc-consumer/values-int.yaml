#################################################################################
# Tractus-X - Digital Product Pass Application 
#
# Copyright (c) 2022, 2024 BMW AG
# Copyright (c) 2022, 2024 Henkel AG & Co. KGaA
# Copyright (c) 2023, 2024 CGI Deutschland B.V. & Co. KG
# Copyright (c) 2023, 2024 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the
# License for the specific language govern in permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
#################################################################################

### The fully configuration is available in https://github.com/eclipse-tractusx/tractusx-edc/tree/main/charts/tractusx-connector




---
# Default values for eclipse-dataspace-connector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

tractusx-connector:
  enabled: true
  participant:
    id: "<path:digital-product-pass/data/int/edc/participant#bpnNumber>"

  iatp:
    # Decentralized IDentifier
    id: "did:web:portal-backend.int.catena-x.net:api:administration:staticdata:did:BPNL000000000FV1"
    trustedIssuers: # array [] that needs to be expand but likely like (sorry unconfirmed on how this is done, as I also would need to check)
      - "did:web:portal-backend.int.catena-x.net:api:administration:staticdata:did:BPNL00000003CRHK"
    sts:
      dim:
        url: "https://dis-integration-service-prod.eu10.dim.cloud.sap/api/v2.0.0/iatp/catena-x-portal"
      oauth:
        token_url: "https://bpnl000000000fv1-dpp.authentication.eu10.hana.ondemand.com/oauth/token"
        client:
          id: "<path:digital-product-pass/data/int/edc/wallet#clientId>"
          secret_alias: int-client-secret

  controlplane:
    enabled: true
    endpoints:
      # -- default api for health checks, should not be added to any ingress
      default:
        # -- port for incoming api calls
        port: 8080
        # -- path for incoming api calls
        path: /consumer/api
      # -- data management api, used by internal users, can be added to an ingress and must not be internet facing
      management:
        # -- port for incoming api calls
        port: 8081
        # -- path for incoming api calls
        path: /consumer/management
        # -- authentication key, must be attached to each 'X-Api-Key' request header
        authKey: <path:digital-product-pass/data/int/edc/oauth#api.key>
      # -- control api, used for internal control calls. can be added to the internal ingress, but should probably not
      control:
        # -- port for incoming api calls
        port: 8083
        # -- path for incoming api calls
        path: /consumer/control
      # -- ids api, used for inter connector communication and must be internet facing
      protocol:
        # -- port for incoming api calls
        port: 8084
        # -- path for incoming api calls
        path: /consumer/api/v1/dsp
      # -- metrics api, used for application metrics, must not be internet facing
      metrics:
        # -- port for incoming api calls
        port: 9090
        # -- path for incoming api calls
        path: /consumer/metrics

    ## Ingress declaration to expose the network service.
    ingresses:
      ## Public / Internet facing Ingress
      - enabled: true
        # -- The hostname to be used to precisely map incoming traffic onto the underlying network service
        hostname: "dpp.int.catena-x.net"
       # -- Additional ingress annotations to add
        annotations: {}
        # -- EDC endpoints exposed by this ingress resource
        endpoints:
          - default
          - management
          - control
          - protocol
          - metrics
        # -- Defines the [ingress class](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class)  to use
        className: "nginx"
        # -- TLS [tls class](https://kubernetes.io/docs/concepts/services-networking/ingress/#tls) applied to the ingress resource
        tls:
          # -- Enables TLS on the ingress resource
          enabled: true
          # -- If present overwrites the default secret name
          secretName: "tls-secret-consumer-controlplane"
  dataplane:
    enabled: true
    endpoints:
      default:
        port: 8080
        path: /consumer/api
      public:
        port: 8081
        path: /consumer/api/public
      control:
        port: 8084
        path: /consumer/api/dataplane/control
      proxy:
        port: 8186
        path: /consumer/proxy
        authKey: <path:digital-product-pass/data/int/edc/oauth#api.key>
      metrics:
        port: 9090
        path: /consumer/metrics
  
    token:
      refresh:
        expiry_seconds: 300
        expiry_tolerance_seconds: 10
        # optional URL that can be provided where clients go to refresh tokens.
        refresh_endpoint:
      signer:
        # alias under which the private key is stored in the vault (JWK or PEM format)
        privatekey_alias: signer_privatekey
      verifier:
        # alias under which the public key is stored in the vault, that belongs to the private key ("privatekey_alias", JWK or PEM format)
        publickey_alias: verifier_publickey
  
    ## Ingress declaration to expose the network service.
    ingresses:
      ## Public / Internet facing Ingress
      - enabled: true
        # -- The hostname to be used to precisely map incoming traffic onto the underlying network service
        hostname: "dpp.int.catena-x.net"
        # -- Additional ingress annotations to add
        annotations: {}
        # -- EDC endpoints exposed by this ingress resource
        endpoints:
          - public
        # -- Defines the [ingress class](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class)  to use
        className: "nginx"
        # -- TLS [tls class](https://kubernetes.io/docs/concepts/services-networking/ingress/#tls) applied to the ingress resource
        tls:
          # -- Enables TLS on the ingress resource
          enabled: true
          # -- If present overwrites the default secret name
          secretName: "tls-secret-consumer-dataplane"
        ## Adds [cert-manager](https://cert-manager.io/docs/) annotations to the ingress resource
        certManager:
          # -- If preset enables certificate generation via cert-manager namespace scoped issuer
          issuer: ""
          # -- If preset enables certificate generation via cert-manager cluster-wide issuer
          clusterIssuer: ""

  postgresql:
    auth:
      username: <path:digital-product-pass/data/int/edc/database#user>
      password: <path:digital-product-pass/data/int/edc/database#password>

  vault:
    hashicorp:
      url: <path:digital-product-pass/data/int/edc/vault#vault.hashicorp.url>
      token: <path:digital-product-pass/data/int/edc/vault#vault.hashicorp.token>
      paths:
        secret: <path:digital-product-pass/data/int/edc/vault#vault.hashicorp.api.secret.path>
        health: /v1/sys/health

postgresql:
  auth:
    username: <path:digital-product-pass/data/int/edc/database#user>
    password: <path:digital-product-pass/data/int/edc/database#password>

item-relationship-service:
  enabled: true
  bpn: <path:digital-product-pass/data/int/edc/participant#bpnNumber>

  irsUrl: "https://dpp-irs.int.catena-x.net"
  apiKeyAdmin: <path:digital-product-pass/data/int/irs/apiKey#apiKeyAdmin>
  apiKeyRegular: <path:digital-product-pass/data/int/irs/apiKey#apiKeyRegular>

  ingress:
    enabled: true
    annotations:
      ingressClassName: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/backend-protocol: HTTP
      nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
      nginx.ingress.kubernetes.io/ssl-passthrough: 'false'
    hosts:
      - host: "dpp-irs.int.catena-x.net"
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - "dpp-irs.int.catena-x.net"
        secretName: tls-secret-dpp-irs

  digitalTwinRegistry:
    type: decentral
    url: https://dpp-registry.int.catena-x.net/semantics/registry/api/v3

    discovery:
      oAuthClientId: discovery  # ID of the OAuth2 client registration to use, see config spring.security.oauth2.client
      discoveryFinderUrl: https://semantics.int.catena-x.net/discoveryfinder/api/v1.0/administration/connectors/discovery/search
    semanticshub:
      url: https://semantics.int.catena-x.net/hub/apimodels
      oAuthClientId: semantics
    bpdm:
      url: https://partners-pool.int.catena-x.net
      oAuthClientId: bpdm
    bpnEndpoint: >-
      {{- if .Values.bpdm.url }}
      {{- tpl (.Values.bpdm.url | default "") . }}/api/catena/legal-entities/{partnerId}?idType={idType}
      {{- end }}

  minioUser: <path:digital-product-pass/data/int/irs/minio#user>
  minioPassword: <path:digital-product-pass/data/int/irs/minio#password>
  minioUrl: "http://{{ .Release.Name }}-minio:9000"

  oauth2:
    clientTokenUri: https://centralidp.int.catena-x.net/auth/realms/CX-Central/protocol/openid-connect/token
    jwkSetUri: https://centralidp.int.catena-x.net/auth/realms/CX-Central/protocol/openid-connect/certs
    discovery:
      clientId: <path:digital-product-pass/data/int/backend#clientId>
      clientSecret: <path:digital-product-pass/data/int/backend#clientSecret>
    semantics:
      clientId: <path:digital-product-pass/data/int/backend#clientId>
      clientSecret: <path:digital-product-pass/data/int/backend#clientSecret>
    bpdm:
      clientId: <path:digital-product-pass/data/int/backend#clientId>
      clientSecret: <path:digital-product-pass/data/int/backend#clientSecret>

  edc:
    catalog:
      acceptedPolicies: >
        [{
            "policyId": "dpp-policy-id",
            "createdOn": "2024-07-17T16:15:14.12345678Z",
            "validUntil": "9999-01-01T00:00:00.00000000Z",
            "permissions": [
                {
                    "action": "use",
                    "constraint": {
                        "and": [
                            {
                                "leftOperand": "https://w3id.org/catenax/policy/Membership",
                                "operator": {
                                    "@id": "eq"
                                },
                                "rightOperand": "active"
                            },
                            {
                                "leftOperand": "https://w3id.org/catenax/policy/UsagePurpose",
                                "operator": {
                                    "@id": "eq"
                                },
                                "rightOperand": "cx.circular.dpp:1"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "policyId": "default-policy",
            "createdOn": "2024-07-17T16:15:14.12345678Z",
            "validUntil": "9999-01-01T00:00:00.00000000Z",
            "permissions": [
                {
                    "action": "use",
                    "constraint": {
                        "and": [
                            {
                                "leftOperand": "https://w3id.org/catenax/policy/Membership",
                                "operator": {
                                    "@id": "eq"
                                },
                                "rightOperand": "active"
                            },
                            {
                                "leftOperand": "https://w3id.org/catenax/policy/UsagePurpose",
                                "operator": {
                                    "@id": "eq"
                                },
                                "rightOperand": "cx.core.digitalTwinRegistry:1"
                            }
                        ]
                    }
                }
            ]
        }]
    controlplane:
      endpoint:
        data: https://dpp.int.catena-x.net/consumer/management
      apikey:
        header: "X-Api-Key"
        secret: <path:digital-product-pass/data/int/edc/oauth#api.key>

  minio:
    serviceAccount:
      create: false
    rootUser: <path:digital-product-pass/data/int/irs/minio#user>
    rootPassword: <path:digital-product-pass/data/int/irs/minio#password>
