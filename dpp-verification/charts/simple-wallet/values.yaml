#################################################################################
# Tractus-X - Digital Product Pass Verification Add-on
#
# Copyright (c) 2023, 2024 BMW AG
# Copyright (c) 2023, 2024 CGI Deutschland B.V. & Co. KG
# Copyright (c) 2024 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the
# License for the specific language govern in permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
#################################################################################

# Default values for simple-wallet.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

name: "simple-wallet"
replicaCount: 1
namespace: ""
nameOverride: ""
fullnameOverride: ""

image:
  repository: docker.io/tractusx/digital-product-pass-verification-wallet
  pullPolicy: Always
  tag: latest


# -- Wallet configuration
credentials:
  storage: 
    # -- Enables the storage of credentials
    enabled: true

security:
  # -- Enables the api key authorization
  enabled: true
  # -- BPN and their respecitve api key
  apiKeys:
      BPNL00000000W3BS: <apiKeyTest>
      BPNL00000000WAWT: <apiKeyTest2>
      BPNL00000000ASDH: <apiKeyTest3>


# -- Existing image pull secret to use to [obtain the container image from private registries](https://kubernetes.io/docs/concepts/containers/images/#using-a-private-registry)
imagePullSecrets: []
podAnnotations: {}

podSecurityContext:
  seccompProfile:
    # -- Restrict a Container's Syscalls with seccomp
    type: RuntimeDefault
  # -- Runs all processes within a pod with a special uid
  runAsUser: 1000
  # -- Processes within a pod will belong to this guid
  runAsGroup: 3000
  # -- The owner for volumes and any files created within volumes will belong to this guid
  fsGroup: 3000

service:
  type: ClusterIP
  port: 7777

ingress:
  enabled: true
  className: "nginx"
  annotations:
    ingressClassName: nginx
    # kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
  hosts:
    - host: &hostname "dpp-wallet.int.demo.catena-x.net"
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: tls-secret
      hosts:
        - *hostname

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# The [container security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container) defines privilege and access control settings for a Container within a pod
securityContext:
  capabilities:
    # -- Specifies which capabilities to drop to reduce syscall attack surface
    drop:
      - ALL
    # -- Specifies which capabilities to add to issue specialized syscalls
    add: []
  # -- Whether the root filesystem is mounted in read-only mode
  readOnlyRootFilesystem: true
  # -- Controls [Privilege Escalation](https://kubernetes.io/docs/concepts/security/pod-security-policy/#privilege-escalation) enabling setuid binaries changing the effective user ID
  allowPrivilegeEscalation: false
  # -- Requires the container to run without root privileges
  runAsNonRoot: true
  # -- The container's process will run with the specified uid
  runAsUser: 1000
  # -- The owner for volumes and any files created within volumes will belong to this guid
  runAsGroup: 3000

# -- specifies the volume mounts for the backend deployment
volumeMounts:
  # -- mounted path for the backend configuration added in the config maps
  - name: wallet-config
    mountPath: /wallet/config
  # -- contains the location for the process data directory
  - name: pvc-wallet
    mountPath: /wallet/keys
    subPath: keys
  - name: pvc-wallet
    mountPath: /wallet/credentials
    subPath: credentials
  # -- contains the log directory uses by the backend
  - name: tmpfs
    mountPath: /wallet/logs
    subPath: logs

# -- volume claims for the containers
volumes:
  # -- persist the backend configuration
  - name: wallet-config
    configMap:
      name: "{{ .Release.Name }}-wallet-config"
  # -- persist the backend data directories
  - name: pvc-wallet
    persistentVolumeClaim:
      claimName: "{{ .Release.Name }}-pvc-wallet-data"
  # -- temporary file system mount
  - name: tmpfs
    emptyDir: {}
